<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
    <%- include('component/util/header') %>
    <style>
        .verde{
            background-color: rgba(40, 167, 69, 0.48);
        }
    </style>
</head>
<body>
    <%- include('component/util/nav-bar') %>
    <div class="container-fluid">
        <div class="row d-flex justify-content-center" id="reloj">
            <h1>{{ hora }}</h1>
        </div>
        <div class="row table-responsive">
            <table class="table" id="app">
                <thead>
                  <tr>
                    <th scope="col">Hora</th>
                    <th scope="col">Materia</th>
                    <th scope="col">Carrera</th>
                    <th scope="col">Aula</th>
                    <th scope="col">Modulo</th>
                    <th scope="col">Estado</th>
                  </tr>
                </thead>
                <tbody>
                    <tr v-bind:class="horario.color" v-for="horario in horarios">
                        <td>{{ horario.horainicio }}</td>
                        <td>{{ horario.nombremateria }}</td>
                        <td>
                            <ul class="list-group list-group-horizontal border-0">
                                <li v-bind:class="horario.color" v-for="carrera in horario.carreras" class="border-0 list-group-item">
                                    <span v-if="carrera.idCarrera == 1 " class="badge bg-secondary">Prof</span>
                                    <span v-else-if="carrera.idCarrera == 2 " class="badge bg-secondary">LCC</span>
                                    <span v-else-if="carrera.idCarrera == 3 " class="badge bg-secondary">LSI</span>
                                    <span v-else-if="carrera.idCarrera == 4 " class="badge bg-secondary">TUDW</span>
                                    <span v-else class="badge bg-secondary">TUASySL</span>
                                </li>
                            </ul>
                        </td>
                        <td>{{ horario.aula }}</td>
                        <td>{{ horario.modulo }}</td>
                        <td>
                            <span v-if="horario.estado == 'normal' " class="badge bg-success">{{ horario.estado }}</span>
                            <span v-else-if="horario.estado == 'parcial' " class="badge bg-warning text-dark">{{ horario.estado }}</span>
                            <span v-else class="badge bg-danger">{{ horario.estado }}</span>
                        </td>
                        <td class="d-none">
                            {{ horario.horafin }}
                        </td>
                    </tr>
                </tbody>
            </table>
        </div>
        <script src="/js/horarios.js"></script>
        <script>
            var app = new Vue({
                el: '#app',
                data:{
                    horarios: [],
                    dia: "",
                    hora: "00:00:00"
                },
                mounted: function() {
                    this.load();
                },
                methods: {
                    load: function(){
                    this.dia = this.numberToDate(new Date().getDay());
                    this.hora = this.timeParse(new Date);
                    console.log(this.dia+" "+this.hora);
                    axios.get(`/horarios/consulta/${this.dia}/${this.hora}`).then((response) => {
                        this.horarios = response.data;
                        this.horarios.forEach(element => {
                                var date2 = this.timeParse(new Date);
                                if(this.comparedToHours(element.horainicio, date2) >= 0 && this.comparedToHours(element.horafin, date2) < 0){
                                    element.color = "verde";
                                    console.log("verde");
                                }else{
                                    element.color = "null";
                                    console.log("null");
                                }
                            });
                        });
                    },
                    numberToDate: function(number) {
                        switch (number) {
                            case 0:
                                return "domingo";
                                break;
                            case 1:    
                                return "lunes";
                                break;
                            case 2:
                                return "martes";
                                break;
                            case 3:
                                return "miercoles";
                                break;
                            case 4:
                                return "jueves";
                                break;
                            case 5:
                                return "viernes";
                                break;
                            case 6:
                                return "sabado";
                                break;
                            default:
                                break;
                        }
                    },
                    timeParse: function (time){
                        return this.timeNumberParse(time.getHours()) + ":" + this.timeNumberParse(time.getMinutes()) + ":00";
                    },
                    timeNumberParse: function (numberTime){
                        var retorno = numberTime;
                        if(retorno < 10){
                            retorno = "0" + retorno;
                        }
                        return retorno;
                    },
                    comparedToHours: function (hours1, hours2){
                        var retorno = 0;
                        var hours1 = hours1.split(":");
                        var hours2 = hours2.split(":");

                        var date1 = new Date();
                        date1.setHours(hours1[0]);
                        date1.setMinutes(hours1[1]);

                        var date2 = new Date();
                        date2.setHours(hours2[0]);
                        date2.setMinutes(hours2[1]);

                        if(date1 < date2){
                            retorno = 1;
                        }else if(date1 > date2){
                            retorno = -1;
                        }
                        return retorno;
                    }
                }
            });

            var reloj = new Vue({
                el: '#reloj',
                data:{
                    hora: "00:00:00"
                }, 
                mounted: function() {
                    this.hora = app.timeParse(new Date);
                    console.log(this.hora);

                    setInterval(this.load(), 1000);
                },
                methods:{
                    load: function(){
                        var fecha = new Date();
                        var minutos = fecha.getMinutes();

                        console.log(minutos);
                        if(minutos == 0 || minutos == 30){
                            app.load();
                        }

                        this.hora = app.timeParse(new Date);
                    }
                }
            });
            setInterval(reloj.load, 30000);
        </script>
    </div>
</body>
</html>